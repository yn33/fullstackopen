{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","catch","error","console","log","then","response","data","newObject","post","id","delete","put","Notification","message","color","className","Filter","filter","handleFilterChange","value","onChange","NewForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Numbers","filtered","handleDelete","map","person","name","number","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","setColor","useEffect","services","toLowerCase","includes","event","target","preventDefault","newPerson","window","confirm","prev","setTimeout","concat","deletePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f2a12f4.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n                    .catch(error => {\r\n                        console.log('get error')\r\n                    })\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n                    .catch(error => {\r\n                        console.log('post error')\r\n                    })\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n                    .catch(error => {\r\n                        console.log('delete error')\r\n                    })\r\n    return request\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n                    .catch(error => {\r\n                        console.log('update error')\r\n                    })\r\n    return request.then(response => response.data)\r\n}\r\nexport default { getAll, create, del, update }","import React, { useState, useEffect } from 'react'\nimport services from './services/persons'\n\nconst Notification = ({ message, color }) => {\n  if (message === '') {\n    return null\n  }\n  if (color === \"green\") {\n    return (\n      <div className=\"greennotif\">\n        {message}\n      </div>\n    )\n  }\n  if (color === \"red\") {\n    return (\n      <div className=\"rednotif\">\n        {message}\n      </div>\n    )\n  }\n\n  return null\n}\n\nconst Filter = ({filter, handleFilterChange}) => {\n  return (\n  <div>\n    filter shown with <input\n    value={filter} \n    onChange={handleFilterChange}/>\n  </div>\n  )\n}\n\nconst NewForm = (props) => {\n  return (\n  <form onSubmit={props.addPerson}>\n    <div>\n      name: <input \n        value={props.newName}\n        onChange={props.handleNameChange}/>\n    </div>\n    <div>\n      number: <input\n      value={props.newNumber}\n      onChange={props.handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>      \n    </div>\n  </form>\n  )\n}\n\nconst Numbers = ({filtered, handleDelete}) => {\n\n  return (\n  <div>\n    {filtered.map(person =>\n    <div key={person.name}>\n      <>{person.name} {person.number}</>\n      <button key={person.name} onClick={handleDelete(person)}>delete</button>\n    </div>\n    )}\n  </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage] = useState('')\n  const [ color, setColor ] = useState(\"green\")\n\n  useEffect(() => {\n    services\n      .getAll()\n      .then(data => {\n        console.log(data)\n        setPersons(data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleDelete = (deletePerson) => {\n    return () => {\n      const ask = window.confirm(`Delete ${deletePerson.name}?`)\n      if(ask) {\n        services\n          .del(deletePerson.id)\n          .then(() => {\n            setPersons(persons.filter(person => person.id !== deletePerson.id))\n          })\n      }\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log(newName)\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (!persons.map(person => person.name).includes(newName)) {\n\n      services\n        .create(newPerson)\n        .then(data => {\n          setPersons(persons.concat(data))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${data.name}`)\n          setTimeout(() => {\n            setMessage('')\n          }, 3000)\n        })\n\n    } else {\n      const ask = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(ask) {\n        const prev = persons.filter(person => person.name === newName)\n        services\n          .update(prev[0].id, newPerson)\n          .then((data) => {\n            setPersons(persons.map(person => person.id !== prev[0].id ? person : data))\n            setNewName('')\n            setNewNumber('')\n            setMessage(`Changed the number for ${data.name}`)\n            setTimeout(() => {\n              setMessage('')\n            }, 3000)\n          })\n          .catch(error => {\n            setColor(\"red\")\n            setMessage(`Information of ${newPerson.name} has already been removed from the server`)\n            setTimeout(() => {\n              setMessage('')\n              setColor(\"green\")\n            }, 3000)\n          })\n      }\n    }\n  }\n\n  const filtered = filter === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={message} color={color}/>\n        <Filter filter={filter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n        <NewForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n        <Numbers filtered={filtered} handleDelete={handleDelete}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}